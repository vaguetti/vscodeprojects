{"version":3,"sources":["components/logo.svg","components/Menu.js","components/logo.js","modulos/App.js","serviceWorker.js","services/api.js","components/Formulario.js","modulos/cadastrar/index.js","components/Relatorio.js","modulos/listar/index.js","index.js"],"names":["module","exports","Menu","Navbar","expand","variant","bg","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","Logo","Image","src","logo","roundedCircle","App","Container","Row","Col","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","api","axios","create","baseURL","Formulario","useState","nome","setNome","email","setEmail","event","a","preventDefault","post","status","alert","Form","onSubmit","Group","controlId","Label","Control","type","value","placeholder","onChange","target","Button","Cadastro","Relatorio","alunos","setAlunos","useEffect","get","response","data","localStorage","setItem","buscaAlunos","Table","striped","bordered","hover","size","map","aluno","Lista","ReactDOM","render","path","exact","component","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7519b32d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\n//import './App.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n//import NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\n\r\n\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Menu() {\r\n  return (\r\n    <>\r\n    <Navbar expand=\"lg\" variant=\"light\" bg=\"primary\">\r\n      <LinkContainer to=\"/\">\r\n        <Navbar.Brand >Alunos</Navbar.Brand>\r\n      </LinkContainer>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"mr-auto\">\r\n        \r\n\r\n        <LinkContainer to=\"/cadastrar\">\r\n          <Nav.Link >Cadastro</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/listar\">\r\n          <Nav.Link >Lista</Nav.Link>\r\n        </LinkContainer>\r\n      </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </>\r\n     \r\n  \r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\n//import Navbar from 'react-bootstrap/Navbar';\r\n//import NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction Logo() {\r\n  return (\r\n    <>\r\n      <Image src={logo} roundedCircle/>\r\n   </>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\n//import './App.css';\r\nimport Menu from '../components/Menu';\r\nimport Logo from '../components/logo';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\n//import Formulario from './components/Formulario';\r\n//import Relatorio from './components/Relatorio';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Container>\r\n       <Row>\r\n         <Col>\r\n          <Menu />\r\n         </Col>\r\n       </Row> \r\n       <Row>\r\n         <Col>\r\n         <Logo />\r\n         </Col>\r\n       </Row>\r\n      </Container> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL : 'http://computtube-io.umbler.net',\r\n});\r\nexport default api;","import React, {useState} from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport api from '../services/api';\r\n\r\n\r\nfunction Formulario() {\r\n // ---- Uso de Estados\r\n  const [nome,setNome] = useState('');\r\n  function trataNome(event)\r\n  {\r\n       setNome(event.target.value);\r\n  }\r\n  const [email,setEmail] = useState('');\r\n  function trataEmail(event)\r\n  {\r\n    setEmail(event.target.value);\r\n  }\r\n //---------------------------------\r\n\r\n  async function enviaSubmit(event){\r\n    event.preventDefault(); // evitar que o submir direcione para outra página\r\n        const response = await api.post('/alunos',{\r\n      nome : nome,\r\n      email: email\r\n    });\r\n   //console.log(response.status);\r\n   if(response.status == 200)\r\n       alert('Aluno Cadastrado com Sucesso');\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <Form onSubmit={enviaSubmit} >\r\n        <Form.Group controlId=\"formBasicNome\">\r\n          <Form.Label>Nome</Form.Label>\r\n          <Form.Control\r\n           type=\"text\" \r\n           value = {nome}\r\n           placeholder=\"Entre com nome do aluno\" \r\n           onChange = {trataNome}  \r\n           />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>E-mail</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            placeholder=\"Entre com o e-mail do aluno\" \r\n            onChange = {trataEmail}\r\n          />\r\n        </Form.Group>\r\n    <Button variant=\"primary\" type=\"submit\">\r\n      Cadastrar\r\n    </Button>\r\n</Form>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default Formulario;\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\n//import './App.css';\r\nimport Menu from '../../components/Menu';\r\n//import Logo from './logo';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\nimport Formulario from '../../components/Formulario';\r\n//import Relatorio from './Relatorio';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction Cadastro() {\r\n  return (\r\n    <>\r\n      <Container>\r\n       <Row>\r\n         <Col>\r\n          <Menu />\r\n         </Col>\r\n       </Row> \r\n       <Row>\r\n         <Col>\r\n         <Formulario />\r\n         </Col>\r\n       </Row>\r\n      </Container> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cadastro;","import React, {useState,useEffect} from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport api from '../services/api';\r\n\r\n\r\nfunction Relatorio() {\r\n   const [alunos, setAlunos] = useState([]);\r\n\r\n   useEffect(() => {\r\n    async function buscaAlunos()\r\n    {\r\n       const response = await api.get('/alunos');\r\n       //console.log(response.data);\r\n       setAlunos(response.data);\r\n       localStorage.setItem('alunos',response.data);\r\n    }\r\n    buscaAlunos();\r\n   }, []);\r\n  /* async function buscaAlunos()\r\n   {\r\n      const response = await api.get('/');\r\n      //console.log(response.data);\r\n      setAlunos(response.data);\r\n   }\r\n   buscaAlunos();\r\n\r\n*/  return (\r\n    <>\r\n  <Table striped bordered hover size=\"sm\">\r\n  <thead>\r\n    <tr>\r\n      <th>Nome</th>\r\n      <th>E-mail</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n   {alunos.map(aluno => (\r\n    <tr>\r\n      \r\n      <td>{aluno.nome}</td>\r\n      <td>{aluno.email}</td>\r\n    </tr>\r\n    ))}\r\n   \r\n  </tbody>\r\n</Table>\r\n   </>\r\n  );\r\n}\r\n// <th>#</th>\r\n//<td>{aluno._id}</td>\r\nexport default Relatorio;\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\n//import './App.css';\r\nimport Menu from '../../components/Menu';\r\n//import Logo from './logo';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\n//import Formulario from './Formulario';\r\nimport Relatorio from '../../components/Relatorio';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction Lista() {\r\n  return (\r\n    <>\r\n      <Container>\r\n       <Row>\r\n         <Col>\r\n          <Menu />\r\n         </Col>\r\n       </Row> \r\n       <Row>\r\n         <Col>\r\n         <Relatorio />\r\n         </Col>\r\n       </Row>\r\n      </Container> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Lista;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './modulos/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Cadastro from './modulos/cadastrar';\r\nimport Lista from './modulos/listar';\r\n\r\n\r\nReactDOM.render(\r\n    <Router>\r\n    <Switch>\r\n        <Route path=\"/\" exact={true} component={App} />\r\n        <Route path=\"/cadastrar\" component={Cadastro} />\r\n        <Route path=\"/listar\" component={Lista} />\r\n    </Switch>\r\n    </ Router>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}